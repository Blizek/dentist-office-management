# Generated by Django 5.2.4 on 2025-07-19 20:47

import dentman.storage
import dentman.utils
import django.db.models.deletion
import tinymce.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('ops', '0002_alter_category_updated_by_alter_service_updated_by'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Discount name')),
                ('percent', models.FloatField(default=0.0, verbose_name='Discount percent')),
                ('discount_type', models.CharField(choices=[('first_visit', 'First visit'), ('promo_code', 'Promotion code'), ('min_purchase', 'Minimal visit amount'), ('other', 'Other')], max_length=50, verbose_name='Discount type')),
                ('valid_since', models.DateField(blank=True, null=True, verbose_name='Discount valid date')),
                ('valid_to', models.DateField(blank=True, null=True, verbose_name='Discount valid to')),
                ('is_limited', models.BooleanField(default=False, verbose_name='Is discount limited')),
                ('limit_value', models.IntegerField(blank=True, default=0, null=True, verbose_name='Discount limit value')),
                ('used_counter', models.IntegerField(default=0, verbose_name='Discount used counter')),
                ('created_by', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('updated_by', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'discount',
                'verbose_name_plural': 'discounts',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('title', models.CharField(max_length=500, unique=True, verbose_name='Title')),
                ('slug', models.SlugField(max_length=500, unique=True, verbose_name='Slug')),
                ('main_photo', models.ImageField(blank=True, help_text='Main photo that will show up on the lists of posts and the main photo at the post', null=True, storage=dentman.storage.CustomFileSystemStorage(), upload_to=dentman.utils.get_upload_path, verbose_name='Main photo')),
                ('text_html', tinymce.models.HTMLField(blank=True, verbose_name='Text html')),
                ('visit_counter', models.IntegerField(default=0, verbose_name='Visit counter')),
                ('created_by', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('updated_by', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': 'post',
                'verbose_name_plural': 'posts',
            },
        ),
        migrations.CreateModel(
            name='VisitStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Visit status')),
                ('is_booked', models.BooleanField(default=True, verbose_name='Is visit booked')),
                ('is_accepted_by_patient', models.BooleanField(default=False, verbose_name='Is accepted by patient')),
                ('is_postponed', models.BooleanField(default=False, verbose_name='Is visit postponed')),
                ('is_in_progress', models.BooleanField(default=False, verbose_name='Is visit in progress')),
                ('is_finished', models.BooleanField(default=False, verbose_name='Is visit finished')),
                ('is_resigned_by_patient', models.BooleanField(default=False, verbose_name='Is visit resigned by patient')),
                ('is_resigned_by_dentist', models.BooleanField(default=False, verbose_name='Is visit resigned by dentist')),
                ('is_resigned_by_office', models.BooleanField(default=False, verbose_name='Is visit resigned by office')),
                ('created_by', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('updated_by', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
            ],
            options={
                'verbose_name': "visit's status",
                'verbose_name_plural': "visit's statuses",
            },
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('eid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='EID')),
                ('scheduled_from', models.DateTimeField(verbose_name='Scheduled from')),
                ('scheduled_to', models.DateTimeField(verbose_name='Scheduled to')),
                ('starting_time', models.DateTimeField(verbose_name='Visit starting time')),
                ('ending_time', models.DateTimeField(verbose_name='Visit ending time')),
                ('visit_description', models.TextField(verbose_name='Visit description')),
                ('additional_info', models.TextField(verbose_name='Additional information')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('created_by', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('dentists', models.ManyToManyField(limit_choices_to={'is_dentist': True}, related_name='dentists', to=settings.AUTH_USER_MODEL, verbose_name='Dentists')),
                ('discounts', models.ManyToManyField(related_name='discounts', to='ops.discount', verbose_name='Discounts')),
                ('patient', models.ForeignKey(limit_choices_to={'is_patient': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Patient')),
                ('updated_by', models.ForeignKey(blank=True, default=None, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_updated_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
                ('visit_status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ops.visitstatus', verbose_name="Visit's status")),
            ],
            options={
                'verbose_name': 'visit',
                'verbose_name_plural': 'visits',
            },
        ),
    ]
